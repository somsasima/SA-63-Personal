/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntPersonalEdges,
    EntPersonalEdgesFromJSON,
    EntPersonalEdgesFromJSONTyped,
    EntPersonalEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntPersonal
 */
export interface EntPersonal {
    /**
     * Added holds the value of the "Added" field.
     * @type {string}
     * @memberof EntPersonal
     */
    added?: string;
    /**
     * PersonalDob holds the value of the "PersonalDob" field.
     * @type {string}
     * @memberof EntPersonal
     */
    personalDob?: string;
    /**
     * PersonalMail holds the value of the "PersonalMail" field.
     * @type {string}
     * @memberof EntPersonal
     */
    personalMail?: string;
    /**
     * PersonalName holds the value of the "PersonalName" field.
     * @type {string}
     * @memberof EntPersonal
     */
    personalName?: string;
    /**
     * PersonalPhone holds the value of the "PersonalPhone" field.
     * @type {string}
     * @memberof EntPersonal
     */
    personalPhone?: string;
    /**
     * 
     * @type {EntPersonalEdges}
     * @memberof EntPersonal
     */
    edges?: EntPersonalEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntPersonal
     */
    id?: number;
}

export function EntPersonalFromJSON(json: any): EntPersonal {
    return EntPersonalFromJSONTyped(json, false);
}

export function EntPersonalFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntPersonal {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'added': !exists(json, 'Added') ? undefined : json['Added'],
        'personalDob': !exists(json, 'PersonalDob') ? undefined : json['PersonalDob'],
        'personalMail': !exists(json, 'PersonalMail') ? undefined : json['PersonalMail'],
        'personalName': !exists(json, 'PersonalName') ? undefined : json['PersonalName'],
        'personalPhone': !exists(json, 'PersonalPhone') ? undefined : json['PersonalPhone'],
        'edges': !exists(json, 'edges') ? undefined : EntPersonalEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function EntPersonalToJSON(value?: EntPersonal | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Added': value.added,
        'PersonalDob': value.personalDob,
        'PersonalMail': value.personalMail,
        'PersonalName': value.personalName,
        'PersonalPhone': value.personalPhone,
        'edges': EntPersonalEdgesToJSON(value.edges),
        'id': value.id,
    };
}


